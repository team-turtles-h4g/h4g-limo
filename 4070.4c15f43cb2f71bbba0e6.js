(self.webpackChunkh4g_limo=self.webpackChunkh4g_limo||[]).push([[4070],{4070:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>E});var i=r(16304),s=r(8651),a=r(93668),o=r(2747),n=r(18419),l=r(54704),h=r(67372),d=r(98154),c=r(57319),p=r(46942),u=(r(12131),r(47648),r(41460)),y=r(8680),v=r(80718),_=r(3523),m=r(71939),g=r(43839),f=r(83727),b=r(20174),w=r(17788),C=r(93476),S=r(66828),k=r(42314);const T=n.Z.getLogger("esri.core.workers.WorkerHandle");class L extends class{constructor(e,t,r,i={}){this._mainMethod=t,this._listeners=[],this._promise=(0,k.bA)(e,{...i,schedule:r}).then(e=>{if(void 0===this._thread){this._thread=e,this._promise=null,i.hasInitialize&&this.broadcast({},"initialize");for(const e of this._listeners)this._connectListener(e)}else e.close()}),this._promise.catch(t=>T.error(`Failed to initialize ${e} worker: ${t}`))}on(e,t){const r={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(r),this._connectListener(r),(0,S.kB)(()=>{r.removed=!0,(0,C.Od)(this._listeners,r),this._thread&&(0,l.pC)(r.threadHandle)&&r.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,r){if(this._thread){const i=this.getTransferList(t,e);return this._thread.invoke(e,t,{transferList:i,signal:r})}return this._promise?this._promise.then(()=>((0,d.k_)(r),this.invokeMethod(e,t,r))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}{constructor(e=null){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,r){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}getTransferList(e){return[e.buffer]}release(){--this.ref<=0&&(x.forEach((e,t)=>{e===this&&x.delete(t)}),this.destroy())}}const x=new Map,I=n.Z.getLogger("esri.layers.ElevationLayer");let D=class extends((0,m.Z)((0,g.Y)((0,f.q)((0,b.I)((0,h.R)(_.Z)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(e=null){let t=x.get((0,l.Wg)(e));return t||((0,l.pC)(e)?(t=new L(t=>e.schedule(t)),x.set(e,t)):(t=new L,x.set(null,t))),++t.ref,t}()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=(0,l.RY)(this._lercDecoder)}set minScale(e){this.constructed&&I.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&I.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=(0,l.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new o.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(d.r9).then(()=>this._fetchImageService(t))),Promise.resolve(this)}fetchTile(e,t,r,i){const s=(0,l.pC)((i=i||{signal:null}).signal)?i.signal:i.signal=(0,d.yi)().signal,o={responseType:"array-buffer",signal:s},n={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(e,t,r,i)).then(()=>(0,a.default)(this.getTileUrl(e,t,r),o)).then(e=>this._lercDecoder.decode(e.data,n,s)).then(e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue}))}getTileUrl(e,t,r){const i=(0,c.B7)({...this.parsedUrl.query,blankTile:!(!this.tilemapCache&&this.supportsBlankTile)&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${i?"?"+i:""}`}queryElevation(e,t){var s=this;return(0,i.Z)(function*(){const{ElevationQuery:i}=yield r.e(9504).then(r.bind(r,19504));return(0,d.k_)(t),(new i).query(s,e,t)})()}createElevationSampler(e,t){var s=this;return(0,i.Z)(function*(){const{ElevationQuery:i}=yield r.e(9504).then(r.bind(r,19504));return(0,d.k_)(t),(new i).createSampler(s,e,t)})()}_fetchTileAvailability(e,t,r,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,i):Promise.resolve("unknown")}_fetchImageService(e){var t=this;return(0,i.Z)(function*(){if(t.sourceJSON)return t.sourceJSON;const r={query:{f:"json",...t.parsedUrl.query},responseType:"json",signal:e},i=yield(0,a.default)(t.parsedUrl.path,r);i.ssl&&(t.url=t.url.replace(/^http:/i,"https:")),t.sourceJSON=i.data,t.read(i.data,{origin:"service",url:t.parsedUrl})})()}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,s._)([(0,p.Cb)({json:{read:{source:"copyrightText"}}})],D.prototype,"copyright",void 0),(0,s._)([(0,p.Cb)({readOnly:!0,type:v.Z})],D.prototype,"heightModelInfo",void 0),(0,s._)([(0,p.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],D.prototype,"path",void 0),(0,s._)([(0,p.Cb)({type:["show","hide"]})],D.prototype,"listMode",void 0),(0,s._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],D.prototype,"minScale",null),(0,s._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],D.prototype,"maxScale",null),(0,s._)([(0,p.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],D.prototype,"opacity",void 0),(0,s._)([(0,p.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],D.prototype,"operationalLayerType",void 0),(0,s._)([(0,p.Cb)()],D.prototype,"sourceJSON",void 0),(0,s._)([(0,p.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],D.prototype,"type",void 0),(0,s._)([(0,p.Cb)(w.HQ)],D.prototype,"url",void 0),(0,s._)([(0,p.Cb)()],D.prototype,"version",void 0),(0,s._)([(0,u.r)("version",["currentVersion"])],D.prototype,"readVersion",null),D=(0,s._)([(0,y.j)("esri.layers.ElevationLayer")],D),D.prototype.fetchTile.__isDefault__=!0;var E=D}}]);