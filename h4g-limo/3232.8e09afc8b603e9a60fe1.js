(self.webpackChunkh4g_limo=self.webpackChunkh4g_limo||[]).push([[3232],{53232:(e,r,o)=>{"use strict";o.r(r),o.d(r,{default:()=>u});var t=o(16304),s=(o(42851),o(54704)),i=o(22332),l=o(86170),n=o(70713),c=o(41186),m=o(69925),a=o(95046);class u{convertVectorFieldData(e){const r=i.Z.fromJSON(e.pixelBlock),o=(0,c.KC)(r,e.type);return Promise.resolve((0,s.pC)(o)&&o.toJSON())}decode(e){return(0,t.Z)(function*(){const r=yield(0,l.Jx)(e.data,e.options);return r&&r.toJSON()})()}symbolize(e){e.pixelBlock=i.Z.fromJSON(e.pixelBlock),e.extent=e.extent?a.Z.fromJSON(e.extent):null;const r=this.symbolizer.symbolize(e);return Promise.resolve((0,s.pC)(r)&&r.toJSON())}updateSymbolizer(e){var r=this;return(0,t.Z)(function*(){var o;r.symbolizer=m.Z.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null==(o=r.symbolizer)?void 0:o.rendererJSON.type)&&(r.symbolizer.rendererJSON.histograms=e.histograms)})()}stretch(e){const r=this.symbolizer.simpleStretch(i.Z.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve((0,s.pC)(r)&&r.toJSON())}estimateStatisticsHistograms(e){const r=(0,n.Hv)(i.Z.fromJSON(e.srcPixelBlock));return Promise.resolve(r)}split(e){const r=(0,n.Vl)(i.Z.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return r&&r.forEach((e,o)=>{r.set(o,null==e?void 0:e.toJSON())}),Promise.resolve(r)}mosaicAndTransform(e){return(0,t.Z)(function*(){const r=e.srcPixelBlocks.map(e=>e?new i.Z(e):null),o=(0,n.us)(r,e.srcMosaicSize,null,null,e.alignmentInfo);if(!e.coefs)return o&&o.toJSON();const t=(0,n.Uk)(o,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return t&&t.toJSON()})()}}}}]);