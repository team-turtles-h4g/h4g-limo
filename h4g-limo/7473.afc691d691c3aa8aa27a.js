(self.webpackChunkh4g_limo=self.webpackChunkh4g_limo||[]).push([[7473],{29104:(e,t,i)=>{"use strict";i.d(t,{Z:()=>r});var s=i(74861);class r extends s.T{constructor(e){super(e),this.hasHighlight=()=>!0}get hasLabels(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const i of this.children)i.isReady&&i.hasData&&(i.commit(e),e.context.setStencilFunction(514,i.stencilRef,255),i._displayList.replay(e,i,t))}}},61789:(e,t,i)=>{"use strict";i.d(t,{Z:()=>$e});var s=i(16304),r=i(8651),n=i(55328),o=i(1518),a=(i(12131),i(54704)),l=i(98154),d=i(85128),h=i(46942),c=(i(47648),i(18419),i(8680)),u=i(78816),f=i(2379),p=i(35718),m=i(79720),y=i(60337),g=i(2266),x=i(23469),_=i(79007),v=i(73507);function b(e,t){if(!t)return e;const i=function(e,t){const i=[],{ymin:s,ymax:r}=e,n=e.xmax-e.xmin,o=e.xmin,a=e.xmax;let l;const[d,h]=t.valid;l=C(e.xmin,t);const c=l.x,u=l.frameId;l=C(e.xmax,t);const f=l.x,p=l.frameId,m=c===f&&n>0;if(n>2*h){const e={xmin:o<a?c:f,ymin:s,xmax:h,ymax:r},t={xmin:d,ymin:s,xmax:o<a?f:c,ymax:r},n={xmin:0,ymin:s,xmax:h,ymax:r},l={xmin:d,ymin:s,xmax:0,ymax:r},m=[],y=[];w(e,n)&&m.push(u),w(e,l)&&y.push(u),w(t,n)&&m.push(p),w(t,l)&&y.push(p);for(let i=u+1;i<p;i++)m.push(i),y.push(i);i.push({extent:e,frameIds:[u]},{extent:t,frameIds:[p]},{extent:n,frameIds:m},{extent:l,frameIds:y})}else c>f||m?i.push({extent:{xmin:c,ymin:s,xmax:h,ymax:r},frameIds:[u]},{extent:{xmin:d,ymin:s,xmax:f,ymax:r},frameIds:[p]}):i.push({extent:{xmin:c,ymin:s,xmax:f,ymax:r},frameIds:[u]});return i}(e,t).map(e=>e.extent);return i.length<2?i[0]||e:i.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:i.map(e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]])}}function D(e,t,i){if(Array.isArray(e)){const s=e[0];if(s>t){const i=(0,_.XZ)(s,t);e[0]=s+i*(-2*t)}else if(s<i){const t=(0,_.XZ)(s,i);e[0]=s+t*(-2*i)}}else{const s=e.x;if(s>t){const i=(0,_.XZ)(s,t);e.x+=i*(-2*t)}else if(s<i){const t=(0,_.XZ)(s,i);e.x+=t*(-2*i)}}return e}function C(e,t){const[i,s]=t.valid,r=2*s;let n,o=0;return e>s?(n=Math.ceil(Math.abs(e-s)/r),e-=n*r,o=n):e<i&&(n=Math.ceil(Math.abs(e-i)/r),e+=n*r,o=-n),{x:e,frameId:o}}function w(e,t){const{xmin:i,ymin:s,xmax:r,ymax:n}=t;return B(e,i,s)&&B(e,i,n)&&B(e,r,n)&&B(e,r,s)}function B(e,t,i){return t>=e.xmin&&t<=e.xmax&&i>=e.ymin&&i<=e.ymax}class F{cut(e,t){let i;if(e.rings)this.closed=!0,i=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,i=e.paths,this.minPts=2}const s=i.length,r=-2*t;for(let n=0;n<s;n++){const e=i[n];if(e&&e.length>=this.minPts){const t=[];for(const i of e)t.push([i[0]+r,i[1]]);i.push(t)}}return this.closed?e.rings=i:e.paths=i,e}}const T=(0,p.Ue)();var I=i(95876),L=i(54133),R=i(71088),S=i(10075);const M=-1;class z{constructor(){this._dirties=[{vertexFrom:M,vertexCount:M,indexFrom:M,indexCount:M,allDirty:!1},{vertexFrom:M,vertexCount:M,indexFrom:M,indexCount:M,allDirty:!1},{vertexFrom:M,vertexCount:M,indexFrom:M,indexCount:M,allDirty:!1},{vertexFrom:M,vertexCount:M,indexFrom:M,indexCount:M,allDirty:!1},{vertexFrom:M,vertexCount:M,indexFrom:M,indexCount:M,allDirty:!1}]}hasDirty(){return this._dirties.some(e=>e.indexCount!==M||e.allDirty)}markAllClean(){for(const e of this._dirties)e.indexFrom=M,e.indexCount=M,e.vertexFrom=M,e.vertexCount=M,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:i,indexFrom:s,vertexCount:r,vertexFrom:n,allDirty:o}=this._dirties[t],a={};let l,d=!1;(o||n!==M&&r>0)&&(a.geometry={count:r,from:n,allDirty:o},d=!0),(o||s!==M&&i>0)&&(l={count:i,from:s,allDirty:o},d=!0),d&&e({indices:l,vertices:a},t)}}markDirtyIndices(e,t,i){const s=this._dirties[e],r=t,n=i;if(!s.allDirty)if(s.indexCount!==M){const e=Math.min(s.indexFrom,r),t=Math.max(s.indexFrom+s.indexCount,r+n)-e;s.indexFrom=e,s.indexCount=t}else s.indexFrom=r,s.indexCount=n}markDirtyVertices(e,t,i,s){const r=this._dirties[e],n=i,o=s;if(!r.allDirty)if(r.vertexCount!==M){const e=Math.min(r.vertexFrom,n),t=Math.max(r.vertexFrom+r.vertexCount,n+o)-e;r.vertexFrom=e,r.vertexCount=t}else r.vertexFrom=n,r.vertexCount=o}}class A{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,i=null;for(;null!==t;)t.count>=e&&(!i||t.count-e<i.count-e)&&(i=t),t=t.next;return i}findAdjacentRanges(e,t){let i=!0,s=!1,r=null,n=this._parent._freeHead;for(;i&&!s;){const o=null!==n?n.from:this._parent._size;e>=(null!==r?r.from+r.count:0)&&e+t<=o?(i=!1,s=!0):null!==n?(r=n,n=n.next):i=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class G{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new A(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const i=t.from,s=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,i,s),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;G._removeRange(t),this._freeHead=e}return i}free(e,t){const[i,s]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:i,next:s};if(null!==i&&(i.next=r),null!==s&&(s.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==s&&r.from+r.count===s.from){const e=r.from,t=r.count;G._fuse(r,s),G._removeRange(s),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(s,void 0,0)}if(null!==i&&i.from+i.count===r.from){const e=i.from,t=i.count;G._fuse(i,r),G._removeRange(r),this._bookKeeper.rangeResized(i,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var O=i(49289);const U=["FILL","LINE","MARKER","TEXT","LABEL"];class k{constructor(e,t,i,s){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=i;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:s?new G(s):null,idxFreeList:s?new G(s):null,vertexBuffers:{},indexBuffer:s?new Uint32Array(s):null};for(const t in e[r])this._freeListsAndStorage[r].vertexBuffers[t]={data:s?(0,O.C$)(s,e[r][t]):null,stride:e[r][t]}}}static fromTileData(e,t){const i=function(e){const t=e.getStrides(),i={};for(let s=0;s<t.length;s++)i[U[s]]=t[s];return i}(e),s=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const a of n)for(const e of a.displayRecords)s[e.geometryType]=Math.max(s[e.geometryType],e.vertexFrom+e.vertexCount),r[e.geometryType]=Math.max(r[e.geometryType],e.indexFrom+e.indexCount);const o=new k(i,e.tileDisplayData.displayList,t,null);for(let a=0;a<e.tileBufferData.geometries.length;++a){const t=s[a],i=r[a],n=e.tileBufferData.geometries[a],l=o._storageFor(U[a]),d=e.tileBufferData.geometries[a].indexBuffer;let h;l.indexBuffer=d,l.idxFreeList=new G(d.length),l.idxFreeList.allocate(i);for(const s in n.vertexBuffer){const t=e.tileBufferData.geometries[a].vertexBuffer[s];l.vertexBuffers[s].data=t.data,l.vertexBuffers[s].stride=t.stride;const i=(0,O.Y8)(t.stride),r=t.data.length*i/t.stride;h||(h=r)}l.vtxFreeList=new G(h),l.vtxFreeList.allocate(t)}return o}delete(e){const t=U[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,i,s,r){const n=U[e.geometryType];let o,a;e.meshData=null,void 0===e.vertexFrom?(a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,a=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,a=t.vertexCount);let l,d,h,c=!0;if(void 0===e.indexFrom?(l=r,h=t.indexCount,d=this._allocateIndices(n,h)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),h=t.indexCount,d=this._allocateIndices(n,h)):t.indexCount===e.indexCount?(c=!1,d=e.indexFrom,h=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),d=e.indexFrom,h=t.indexCount),-1!==o&&-1!==d){const r=this._storageFor(n);if((0,O.wO)(o,d,r.vertexBuffers,r.indexBuffer,t,i,s),e.vertexFrom=o,e.indexFrom=d,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,l),!0}return-1!==o&&this._freeVertices(n,o,a),-1!==d&&this._freeIndices(n,d,h),e.setMeshDataFromBuffers(t,i,s),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const i=t.vertexBuffer,s=t.indexBuffer,r=U[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const a=this._storageFor(r);if((0,O.wO)(n,o,a.vertexBuffers,a.indexBuffer,e,i,s),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in i)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const i=this._storageFor(e),s=i.vtxFreeList.allocate(t);return-1===s||i.vtxFreeList.fragmentation>.5?-1:s}_freeVertices(e,t,i){this._storageFor(e).vtxFreeList.free(t,i)}_freeIndices(e,t,i){this._storageFor(e).idxFreeList.free(t,i)}_allocateIndices(e,t){const i=this._storageFor(e),s=i.idxFreeList.allocate(t);return-1===s||i.idxFreeList.fragmentation>.5?-1:s}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var V=i(98248),P=(i(8485),i(6532),i(86712),i(17757),i(40766),i(28989),i(13811));class Z{constructor(e){this.geometryMap=(0,O.Mk)(()=>({indexBuffer:V.Z.createIndex(e,35044),vao:null}),(t,i)=>({vertexBuffer:V.Z.createVertex(e,O.mR[i])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{draw(e,i,s,r,n){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new P.Z(e,s,i,r,t.data.indexBuffer)}e.bindVAO(t.data.vao),e.drawElements(4,n,5125,Uint32Array.BYTES_PER_ELEMENT*r),e.bindVAO(null)}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((t,i)=>{this._upload(t,i,e)})}_upload(e,t,i){if(e.indices&&(e.indices.allDirty?this._uploadIndices(i,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(i,t,e.indices.from,e.indices.count)),e.vertices){const s=e.vertices;for(const e in s){const r=s[e];r.allDirty?this._uploadVertices(i,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(i,t,e,r.from,r.count)}}}_uploadVertices(e,t,i,s,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[i];if(!o)return;const a=o.stride,l=o.data.buffer;n.buffers[i]&&l.byteLength>0&&(null!=s&&null!=r?n.buffers[i].data.vertexBuffer.setSubData(l,s*a,s*a,(s+r)*a):n.buffers[i].data.vertexBuffer.setData(l))}_uploadIndices(e,t,i,s){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&n.byteLength>0&&(null!=i&&null!=s?r.data.indexBuffer.setSubData(n,4*i,4*i,4*(i+s)):r.data.indexBuffer.setData(n))}}var j=i(37185);class K extends j.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new z}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,i=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new z,this._dispRecStore=k.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||i.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new Z(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=k.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const i=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],s=(e.remove||[]).slice();for(const r of i)null!=r.insertAfter&&s.push(r.id);for(const r of s){const e=this._data.tileDisplayData.displayObjectRegistry.get(r);if(e){this._data.tileDisplayData.displayList.removeFromList(e.displayRecords);for(const i of e.displayRecords)this._dispRecStore.delete(i);this._data.tileDisplayData.displayObjectRegistry.delete(r);const t=this._data.tileDisplayData.displayObjects.indexOf(e);this._data.tileDisplayData.displayObjects.splice(t,1)}}for(const r of i){let i,s=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(s){const e=s.displayRecords;s.set(r),s.displayRecords=e;const t=s.displayRecords.length;for(let i=0;i<t;++i){const e=s.displayRecords[i],t=r.displayRecords[i];(i>=r.displayRecords.length||e.geometryType!==t.geometryType||e.symbolLevel!==t.symbolLevel||e.zOrder!==t.zOrder||e.materialKey!==t.materialKey)&&(this._dispRecStore.delete(s.displayRecords[i]),i<r.displayRecords.length&&(s.displayRecords[i]=void 0))}s.displayRecords.length=r.displayRecords.length}else{let e;s=r.copy(),s.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,s);const t=this._data.tileDisplayData.displayObjects;if(null!=s.insertAfter)if(i={},s.insertAfter>=0){const i=this._data.tileDisplayData.displayObjectRegistry.get(s.insertAfter);i?(e=t.indexOf(i)+1,e<t.length?t.splice(e,0,s):(t.push(s),e=t.length)):(t.push(s),e=t.length)}else t.unshift(s),e=0;else t.push(s),e=t.length;if(i){const s=r.displayRecords.length>0?1:0;let n=0;for(let r=e-1;r>=0&&n<s;--r)for(let e=t[r].displayRecords.length-1;e>=0&&n<s;--e){const s=t[r].displayRecords[e],o=this._data.tileDisplayData.displayList.getDPInfoType();i[o]||(i[o]=s,++n)}}}const n=r.displayRecords.length;for(let o=0;o<n;++o){const n=r.displayRecords[o];let a=s.displayRecords[o];a?(a.meshData=n.meshData,a.materialKey=n.materialKey):(a=n.copy(),a.vertexFrom=void 0,a.indexFrom=void 0,s.displayRecords[o]=a);const l=n.geometryType,d=this._data.tileDisplayData.displayList.getDPInfoType(),h=e.addOrUpdate.tileBufferData.geometries[l],c=h.vertexBuffer,u=h.indexBuffer;let f;i&&(f=i[d]?this._data.tileDisplayData.displayList.splitAfter(i[d]):-1),t=this._dispRecStore.setMeshData(a,n,c,u,f)&&t,i&&null!=a.indexFrom&&null!=a.indexFrom&&(i[d]=a)}}return t}}class E{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,i){if(!t&&!i)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const s=this._byGeometryType[e];s.vertices+=t,s.indices+=i}}class H{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new H;for(let t=0;t<this.geometries.length;t++){const i=this.geometries[t],s=e.geometries[t];s.indexBuffer=i.indexBuffer.slice(),s.vertexBuffer={};for(const e in i.vertexBuffer){const{data:t,stride:r}=i.vertexBuffer[e];s.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new H;for(let i=0;i<5;++i){t.geometries[i].indexBuffer=new Uint32Array(e.geometries[i].indexBuffer),t.geometries[i].vertexBuffer={};for(const s in e.geometries[i].vertexBuffer)t.geometries[i].vertexBuffer[s]={data:(0,O.e2)(e.geometries[i].vertexBuffer[s].data,e.geometries[i].vertexBuffer[s].stride),stride:e.geometries[i].vertexBuffer[s].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const i in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[i]={data:this.geometries[t].vertexBuffer[i].data.buffer,stride:this.geometries[t].vertexBuffer[i].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const i in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[i].data.buffer)}return e}}var q=i(63054);function W(e,t,i,...s){t<e.length?e.splice(t,i,...s):e.push(...s)}const N=new Map;N.set(q.jx.MAP,[q.LW.FILL,q.LW.LINE,q.LW.MARKER,q.LW.TEXT]),N.set(q.jx.LABEL,[q.LW.LABEL]),N.set(q.jx.LABEL_ALPHA,[q.LW.LABEL]);class X{constructor(){this.symbolLevels=[]}replay(e,t,i){for(const s of this.symbolLevels)for(const r of s.zLevels){const s=r.geometryDPInfo.unified;if(s)for(const r of s){const s=e.painter.getGeometryBrush(r.geometryType),n=t.getGeometry(r.geometryType),o={geometryType:r.geometryType,materialKey:r.materialKey,indexFrom:r.indexFrom,indexCount:r.indexCount,draw:(e,t,i)=>{n.draw(e,t,i,r.indexFrom,r.indexCount)}};s.prepareState(e,t),s.drawGeometry(e,t,o,i)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const i of e)this._addToList(i,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const i of e)t=this._removeFromList(i);return t}clone(){const e=new X;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),i=t.length,s=e.indexFrom+e.indexCount;for(let r=0;r<i;++r){const i=t[r];if(i.geometryType===e.geometryType&&s>i.indexFrom&&s<=i.indexFrom+i.indexCount){if(s<i.indexFrom+i.indexCount){const e=new Y;e.geometryType=i.geometryType,e.materialKey=i.materialKey,e.indexFrom=s,e.indexCount=i.indexFrom+i.indexCount-s,t.splice(r+1,0,e),i.indexCount=s-i.indexFrom}return r}}}_addToList(e,t){const i=this._getDisplayList(e.symbolLevel,e.zOrder),s=null!=t?t:i.length-1,r=s>=0&&s<i.length?i[s]:null;if(null!==r&&r.materialKey===e.materialKey&&r.indexFrom+r.indexCount===e.indexFrom&&r.geometryType===e.geometryType)r.indexCount+=e.indexCount;else{const t=new Y;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,W(i,s+1,0,t)}}_removeFromList(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),i=t.length;let s;for(let r=0;r<i;++r){const i=t[r];if(e.indexFrom+e.indexCount>i.indexFrom&&e.indexFrom<i.indexFrom+i.indexCount&&i.geometryType===e.geometryType){s=r;break}}if(void 0!==s){const i=t[s];if(e.indexFrom===i.indexFrom)return i.indexCount-=e.indexCount,i.indexFrom+=e.indexCount,0===i.indexCount&&W(t,s,1),s-1;if(e.indexFrom+e.indexCount===i.indexFrom+i.indexCount)return i.indexCount-=e.indexCount,0===i.indexCount?(W(t,s,1),s-1):s;{const r=i.indexFrom,n=e.indexFrom-i.indexFrom,o=e.indexCount,a=i.indexFrom+i.indexCount-(e.indexFrom+e.indexCount);i.indexCount=n;const l=new Y;return l.geometryType=i.geometryType,l.materialKey=i.materialKey,l.indexFrom=r+n+o,l.indexCount=a,W(t,s+1,0,l),s}}return null}_getDisplayList(e,t){let i;const s=this.symbolLevels.length;for(let o=0;o<s;o++)if(this.symbolLevels[o].symbolLevel===e){i=this.symbolLevels[o];break}let r;i||(i=new $,i.symbolLevel=e,this.symbolLevels.push(i));const n=i.zLevels.length;for(let o=0;o<n;o++)if(i.zLevels[o].zLevel===t){r=i.zLevels[o];break}return r||(r=new Q,r.geometryDPInfo=new J,r.zLevel=t,i.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class Y{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new Y;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class J{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new J;return e.fill=this.fill&&this.fill.map(e=>e.clone()),e.line=this.line&&this.line.map(e=>e.clone()),e.marker=this.marker&&this.marker.map(e=>e.clone()),e.text=this.text&&this.text.map(e=>e.clone()),e.label=this.label&&this.label.map(e=>e.clone()),e.unified=this.unified&&this.unified.map(e=>e.clone()),e}}class Q{constructor(){this.geometryDPInfo=new J}clone(){const e=new Q;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class ${constructor(){this.zLevels=[]}clone(){const e=new $;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class ee{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,i){for(const s in e)this.vertexData.set(s,e[s]);for(const s in this.vertexData)null===e[s]&&this.vertexData.delete(s);this.vertexCount=t,this.indexData=i}}class te{constructor(e,t,i,s=0,r=0){this.id=e,this.geometryType=t,this.materialKey=i,this.minZoom=s,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new te(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,i){const s=new ee;for(const r in t){const i=t[r].stride,n=t[r].data,o=[],a=(0,O.Y8)(i);for(let t=0;t<i*e.vertexCount/a;++t)o[t]=n[t+i*e.vertexFrom/a];s.vertexData.set(r,o)}s.indexData.length=0;for(let r=0;r<e.indexCount;++r)s.indexData[r]=i[r+e.indexFrom]-e.vertexFrom;s.vertexCount=e.vertexCount,this.meshData=s}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new ee;for(const i in e){const t=e[i].stride,s=e[i].data,r=[],n=(0,O.Y8)(t);for(let e=0;e<t*this.vertexCount/n;++e)r[e]=s[e+t*this.vertexFrom/n];this.meshData.vertexData.set(i,r)}this.meshData.indexData.length=0;for(let i=0;i<this.indexCount;++i)this.meshData.indexData[i]=t[i+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,i,s){for(const r in t){const i=t[r].stride,s=this.meshData.vertexData.get(r),n=t[r].data,o=(0,O.Y8)(i);for(let t=0;t<i*this.meshData.vertexCount/o;++t)n[t+i*e/o]=s[t]}for(let r=0;r<this.meshData.indexData.length;++r)s[r+i]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,i){let s=0,r=0;for(const n of e)n.writeMeshDataToBuffers(s,t,r,i),s+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const i=e.readInt32(),s=e.readInt32(),r=new te(t.id,i,s);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function ie(e,t){if(null!==t){e.push(t.length);for(const i of t)i.serialize(e);return e}e.push(0)}class se{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new se(this.id);return e.set(this),e}clone(){const e=new se(this.id);return e.displayRecords=this.displayRecords.map(e=>e.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),ie(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),i=new se(t);return i.displayRecords=function(e,t,i){const s=e.readInt32(),r=new Array(s);for(let n=0;n<r.length;n++)r[n]=t.deserialize(e,i);return r}(e,te,{id:t}),i}}class re{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new X;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new re;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(e=>e.clone())),e}serialize(e){return ie(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),i=new Array(t),s=new Map;for(let r=0;r<i.length;++r){const t=se.deserialize(e);i[r]=t,s.set(t.id,t)}this.displayObjects=i,this._displayList=null,this._displayObjectRegistry=s}static deserialize(e){const t=new re;return t._deserializeObjects(e),t}}var ne=i(74943);class oe{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,O.e2)(e.data,e.stride);return new oe(t,e.stride)}static fromVertexVector(e){const t=(0,O.e2)(e.data.buffer(),e.stride);return new oe(t,e.stride)}}class ae{constructor(e,t,i){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=i}static decode(e){const t=e.geometryType,i=e.indexBuffer,s={};for(const r in e.namedBuffers)s[r]=oe.decode(e.namedBuffers[r]);return new ae(t,i,s)}static fromVertexData(e,t){const i=e.indices,s=(0,O.e2)(e.vertices,e.stride),r={geometry:new oe(s,e.stride)};return new ae(t,i,r)}static fromVertexVectors(e){const t=e.geometryType,i=e.indexVector.buffer(),s={};for(const r in e.namedVectors)s[r]=oe.fromVertexVector(e.namedVectors[r]);return new ae(t,i,s)}}var le=i(83361);class de{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const e=this.data.length/(this.stride/4);return e!==(0|e)&&console.debug("Corrupted stride"),e}transfer(e,t){const i=this.data.buffer();e.vertexCount=this.vertexCount,e.data=i,e.stride=this.stride,t.push(i)}}class he{constructor(e,t,i=!1){this.geometryType=e,this.indexVector=new le.Z(Uint32Array,6*t),this.namedVectors={};const s=(0,O.$_)(e,i);for(const r in s){const e=s[r];let i;switch(e%4){case 0:case 2:i=new le.Z(Uint32Array,e*t);break;case 1:case 3:i=new le.Z(Uint8Array,e*t)}this.namedVectors[r]=new de(i,e)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const i=this.indexVector.buffer(),s={};t.push(i);for(const r in this.namedVectors){const e=this.namedVectors[r];s[r]={},e.transfer(s[r],t)}e.geometryType=this.geometryType,e.indexBuffer=i,e.namedBuffers=s,this.destroy()}intoBuffers(){const e=ae.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const ce=new E,ue=new E;function fe(e,t){const i={};for(const s in e){const r={data:(0,O.C$)(t,e[s]),stride:e[s]};i[s]=r}return i}class pe{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){ce.reset();const e=function(e){const t=[[],[],[],[],[]],i=e;for(const s of i)for(const e of s.displayRecords)t[e.geometryType].push(e);return t}(this.tileDisplayData.displayObjects);for(const s of e)for(const e of s)e&&ce.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,i=new H;for(let s=0;s<t;++s){i.geometries[s].indexBuffer=new Uint32Array(Math.round(1.5*ce.indicesFor(s)));const e=[];for(const i in this.tileBufferData.geometries[s].vertexBuffer)e.push(this.tileBufferData.geometries[s].vertexBuffer[i].stride);const t=pe._computeVertexAlignment(e),r=Math.round(1.5*ce.verticesFor(s)),n=pe._align(r,t);for(const o in this.tileBufferData.geometries[s].vertexBuffer){const e=this.tileBufferData.geometries[s].vertexBuffer[o].stride;i.geometries[s].vertexBuffer[o]={stride:e,data:(0,O.C$)(n,e)}}}ue.reset(),this.tileDisplayData.displayList.clear();for(let s=0;s<t;++s){const t=e[s];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(ue.verticesFor(s),i.geometries[s].vertexBuffer,ue.indicesFor(s),i.geometries[s].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[s].vertexBuffer,r=this.tileBufferData.geometries[s].indexBuffer,n=i.geometries[s].vertexBuffer,o=i.geometries[s].indexBuffer,a=ue.verticesFor(s),l=ue.indicesFor(s);(0,O.wO)(a,l,n,o,e,t,r),e.vertexFrom=a,e.indexFrom=l}ue.needMore(s,e.vertexCount,e.indexCount)}}for(const s of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(s.displayRecords);this.tileBufferData=i}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const i=this.tileBufferData.geometries[t];e[t]={};for(const s in i.vertexBuffer)e[t][s]=i.vertexBuffer[s].stride}return e}clone(){const e=new pe;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let i=0;for(let s=0;s<t;s++)i=Math.max(i,e[s].displayRecords.length);return 2*(12*e.length+e.length*i*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),i=this.tileDisplayData.serialize(new le.Z(Int32Array,this._guessSize())).buffer();return t.push(i),{result:{displayData:i,bufferData:e},transferList:t}}static fromVertexData(e,t){const i={},s=new Map;for(const r of t)s.set(r.id,r);return(0,O.Z_)(t=>{const r=e.data[t];if((0,a.pC)(r)){const e=ne.$.from(r.records).getCursor();for(;e.next();){const i=e.id,r=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,l=e.vertexCount,d=s.get(i),h=new te(i,t,r);h.indexFrom=n,h.indexCount=o,h.vertexFrom=a,h.vertexCount=l,d.displayRecords.push(h)}i[t]=ae.fromVertexData(r,t)}else i[t]=new he(t,0).intoBuffers()}),pe.fromMeshData({displayObjects:t,vertexBuffersMap:i})}static fromMeshData(e){const t=new pe,i=new re,s=new H;i.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const t=e.vertexBuffersMap[r];s.geometries[r].indexBuffer=t.indexBuffer,s.geometries[r].vertexBuffer=t.namedBuffers}return t.tileDisplayData=i,t.tileBufferData=s,t}static bind(e,t){const i=new pe;return i.tileDisplayData=e,i.tileBufferData=t,i}static create(e,t){const i=new pe;i.tileDisplayData=new re,i.tileDisplayData.displayObjects=e;const s=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const l of e)for(const e of l.displayRecords)n[e.geometryType].push(e),s[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const o=new H,a=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let l=0;l<5;l++){const e=new Uint32Array(r[l]),t=fe(a[l],s[l]);te.writeAllMeshDataToBuffers(n[l],t,e),o.geometries[l]={indexBuffer:e,vertexBuffer:t}}return i.tileBufferData=o,i}static _align(e,t){const i=e%t;return 0===i?e:e+(t-i)}static _computeVertexAlignment(e){let t=!1,i=!1;for(const s of e)s%4==2?t=!0:s%4!=0&&(i=!0);return i?4:t?2:1}}var me=i(55613),ye=i(81796),ge=i(45858),xe=i(80055),_e=i(93765),ve=i(48591),be=i(90571),De=i(41927),Ce=i(41801),we=i(6152),Be=i(9385);class Fe extends Be.i{constructor(e,t){super(e,t,null)}static from(e){const t=we.s.createInstance(),i=[],s=e.filter(e=>!!e.geometry);for(const r of s){const e=(0,y.Ji)(r.geometry);(0,Ce.E7)(i,[r],e,!1,!1,"uid")}return new Fe(t,i)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Fe(this.instance,this._features);return this.copyInto(e),e}}var Te=i(43899),Ie=i(42373),Le=i(61182),Re=i(62786),Se=i(11909),Me=i(84991),ze=i(51122),Ae=i(10504),Ge=i(99867),Oe=i(78381);const Ue=new Ge.Z,ke=new Ge.Z,Ve="esriGeometryPolyline";function Pe(e){e.coords.length=0,e.lengths.length=0}class Ze{constructor(){this.bounds=(0,p.Ue)(),this.graphic=null,this.size=[0,0,0,0]}static acquire(e=null,t,i,s,r,n){let o;return 0===Ze._pool.length?o=new Ze:(o=Ze._pool.pop(),this._set.delete(o)),o.acquire(e,t,i,s,r,n),o}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,y.oU)(e.geometry)){const i=e.symbol;if((0,a.Wi)(i))return null;if((0,Oe.yA)(i.type)||(0,Oe.ab)(i.type)){const i=(0,ze.tO)(e.geometry);return(0,Ae.RF)(t,{},{x:i[0],y:i[1]},!1,!1)}}return null}acquire(e=null,t,i,s,r,n){e&&this.set(e,t,i,s,r,n)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,i,s,r,n){this.graphic=e,this.geometry=i,this.symbolResource=t,this.resolution=s,this.updateBounds(s,r,n)}updateBounds(e,t,i){(0,Oe.zX)(this.bounds,this.size,this.symbolResource,this.geometry,e,t,i)}getGeometryQuantized(e,t,i){const s=this.geometry;if((0,y.oU)(s)){const t=s.rings;if(1===t.length&&2===t[0].length)return(0,Ae.ym)(e,{paths:[[t[0][0],t[0][1]]]})}else{if((0,y.l9)(s))return Pe(Ue),Pe(ke),(0,Ce.u0)(Ue,s),(0,Ce.zj)(ke,Ue,s.hasZ,s.hasM,Ve,e.scale[0]),(0,Ce.Nh)(Ue,ke,s.hasZ,s.hasM,Ve,e),(0,Ce.J6)(Ue,s.hasZ,s.hasM);if((0,y.aW)(s)){const r=this.resolution*this.size[0],[n,o]=(0,_.uS)(i),a=o-n,l=s.points.filter(e=>{if(e[0]+r>o||e[0]-r<n){const i=[...e];return e[0]+r>o?i[0]-=a:i[0]+=a,(0,p.Zm)(t,e,r)||(0,p.Zm)(t,i,r)}return(0,p.Zm)(t,e,r)});return 0===l.length?{points:l}:(0,Ae.ym)(e,{points:l})}}return(0,Ae.ym)(e,this.geometry)}}Ze._pool=[],Ze._set=new Set;const je={minX:0,minY:0,maxX:0,maxY:0},Ke=(0,p.Ue)(),Ee=1e-5;function He(e,t,i,s,r){return je.minX=t,je.minY=i,je.maxX=s,je.maxY=r,e.search(je)}function qe(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class We{constructor(e,t,i,s,r,n){this._graphics=s,this._onAdd=r,this._onRemove=n,this._index=(0,Ie.r)(9,qe),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=e,this._uidFieldName=i;const o=e.getClosestInfoForScale(t);o&&(this._currentLevel=o.level,this._resolution=this._tileInfoView.getTileResolution(o.level)),this._metersPerUnit=(0,v.JY)(e.spatialReference)?(0,Te.Z7)(e.spatialReference):1}hitTest(e,t,i,s,r){e=(0,Se.or)(e,this._tileInfoView.spatialReference);const n=.5*s*i;Ke[0]=e-n,Ke[1]=t-n,Ke[2]=e+n,Ke[3]=t+n;const o=.5*s*(i+Oe.y1),a=He(this._index,e-o,t-o,e+o,t+o);if(!a||0===a.length)return[];const l={x:e,y:t},h=[];let c;for(const u of a)if(u.graphic.visible)switch((0,y.Ji)(u.geometry)){case"esriGeometryPoint":{const e=u.symbol;if(!e)continue;const t=u.geometry,{x:i,y:n}=t,o=s*this._metersPerUnit;let a;switch(e.type){case"esriTS":a=(0,Oe.Zw)(i,n,e,u.size,s,r);break;case"expanded-cim":a=(0,Oe.oD)(i,n,e,s,o,r);break;case"esriSMS":case"esriPMS":a=(0,Oe.Il)(i,n,e,s,o,r)}(0,Le.CI)(a,l)&&h.push(u)}break;case"esriGeometryPolyline":{const i=u.symbol;let r=0;if("expanded-cim"===i.type){const e=i.layers;if(!e||0===e.length)continue;const t=e.findIndex(e=>"line"===e.type);if(-1===t)continue;r=(0,Me.hf)(e[t].width,null,null)}else{const e=i.layers;if(!e||0===e.length)continue;r=e[0].width}c=1.5*s*window.devicePixelRatio*(0,d.F2)(r),(0,Oe.nl)(u.geometry,e,t,c)&&h.push(u)}break;case"esriGeometryEnvelope":{const e=u.geometry,t=(0,p.al)(e.xmin,e.ymin,e.xmax,e.ymax);(0,p.kK)(t,Ke)&&h.push(u);break}case"esriGeometryPolygon":{if((0,Le.CI)(u.geometry,l)){h.push(u);break}const e=(0,Re._w)(u.geometry);if(Math.abs(e.ymax-e.ymin)<5*s||Math.abs(e.xmax-e.xmin)<5*s){const t=(0,p.al)(e.xmin,e.ymin,e.xmax,e.ymax);(0,p.kK)(t,Ke)&&h.push(u)}break}case"esriGeometryMultipoint":{const e=u.symbol;if(!e)continue;const t=u.geometry.points;let i;for(let n=0;n<t.length;n++)if(i="esriTS"===e.type?(0,Oe.Zw)(t[n][0],t[n][1],e,u.size,s,r):(0,Oe.Il)(t[n][0],t[n][1],e,s,s*this._metersPerUnit,r),(0,Le.CI)(i,l)){h.push(u);break}break}}return h.sort((e,t)=>{const i=(0,Oe.eT)(e.graphic),s=(0,Oe.eT)(t.graphic);return i===s?t.zorder-e.zorder:i-s}),h.map(e=>e.graphic)}getGraphicsData(e,t,i){const s=this._searchForItems(t);if(0===s.length||0===i.length)return[];s.sort((e,t)=>e.zorder-t.zorder),s[0].insertAfter=-1;for(let d=1;d<s.length;d++)s[d].insertAfter=s[d-1].graphic.uid;s.sort((e,t)=>e.graphic.uid-t.graphic.uid),i.sort((e,t)=>e.uid-t.uid);let r,n=0,o=0;const a=[],l={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const d of i){for(o=-2;n<s.length;)if(r=s[n],n++,d.uid===r.graphic.uid){o=r.insertAfter;break}if(!r.geometry||-2===o)continue;const i=r.getGeometryQuantized(l,t.bounds,this._tileInfoView.spatialReference),h={...r.graphic.attributes};h[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),a.push({centroid:Ze.getCentroidQuantized(r,l),geometry:i,attributes:h,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return a.sort((e,t)=>e.zorder-t.zorder),a}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:i,resolution:s}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[s,s],translate:[i[0],i[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,i){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const s=Ze.acquire(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,s),i&&this._index.insert(s),s.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let s=0;s<e.length;s++)i=e[s],t=this._itemByGraphic.get(i),t&&(t.zorder=s)}update(e,t,i){const s=this._itemByGraphic.get(e);s.groupId=null;const r=(0,p.d9)(s.bounds);return s.size[0]=s.size[1]=0,this._index.remove(s),s.set(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),i&&this._index.insert(s),{oldBounds:r,newBounds:s.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView,i=t.getTileResolution(e);this._resolution=i,this._index.clear();const s=this._itemByGraphic,r=[];for(const[n,o]of s)o.updateBounds(this._resolution,this._resolution*this._metersPerUnit,t.spatialReference),o.geometry&&r.push(o);this._index.load(r)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,s,r){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:a}=r;let l,d,h,c;i.sort((e,t)=>e.zorder-t.zorder);for(let u=0;u<i.length;u++){h=i[u],l=h.graphic,d=h.getGeometryQuantized(s,a,o),c=0===u?-1:i[u-1].graphic.uid;const r={...h.graphic.attributes};r[n]=l.uid,null==h.groupId&&(h.groupId=t.createTemplateGroup(h.symbol,null)),e.push({centroid:Ze.getCentroidQuantized(h,s),geometry:d,attributes:r,symbol:h.symbol,groupId:h.groupId,insertAfter:c,zorder:h.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,i=e.bounds;if(t.isWrappable){const[s,r]=(0,_.uS)(t),n=Math.abs(i[2]-r)<Ee,o=Math.abs(i[0]-s)<Ee;if((!n||!o)&&(n||o)){const t=e.resolution;let o;o=(0,p.Ue)(n?[s,i[1],s+t*Oe.y1,i[3]]:[r-t*Oe.y1,i[1],r,i[3]]);const a=He(this._index,i[0],i[1],i[2],i[3]),l=He(this._index,o[0],o[1],o[2],o[3]);return[...new Set([...a,...l])]}}return He(this._index,i[0],i[1],i[2],i[3])}}var Ne=i(60544);const Xe=e=>{let t=class extends((0,Ne.I)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,r._)([(0,h.Cb)()],t.prototype,"graphics",void 0),(0,r._)([(0,h.Cb)()],t.prototype,"renderer",void 0),(0,r._)([(0,h.Cb)()],t.prototype,"updating",void 0),(0,r._)([(0,h.Cb)()],t.prototype,"view",void 0),t=(0,r._)([(0,c.j)("esri.views.layers.GraphicsView")],t),t};var Ye=i(81153);function Je(e,t,i){if(i.has(e))return i.get(e);const s={tile:t,addedOrModified:[],removed:[]};return i.set(e,s),s}let Qe=class extends(Xe((0,o.p)(n.Z))){constructor(e){super(e),this._storage=new De.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashTpExpandedSymbolPromise=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}_createMatcher(e,t){if(e){const i=(0,ve.MD)({indexCount:0,fields:{}},"feature",e);this._matcher=(0,_e.fL)(i,t,null)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._attributeStore=new be.ZP({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,Ye.Z)()),this.container.hasHighlight=()=>!!this._highlightIds.size,this._graphicStore=new We(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)},e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)});const e=new ge.W(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._createMatcher(this.renderer,e),this._meshFactory=new ye.j(null,this.uid,e),this._templateStore=e,this.handles.add([this.watch("renderer",t=>{this._createMatcher(t,e);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()}),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",e=>this._graphicsChangeHandler(e)),"graphics"),this._attached=!0,this.notifyChange("updating")})]),this._onTileUpdate({added:this.view.graphicsTileStore.tiles,removed:[]})}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e,t){if(!this.view||!this.view.position)return Promise.resolve(null);const i=this.view.toMap((0,d.vW)(e,t));return this.searchFeatures(i).then(e=>e&&e.length?e[0]:null)}searchFeatures(e,t=2){var i=this;return(0,s.Z)(function*(){return i._graphicStore.hitTest(e.x,e.y,t,i.view.state.resolution,i.view.state.rotation)})()}update(e){(0,l.k_)(this._controller.signal);const t=this.view.featuresTilingScheme.getClosestInfoForScale(e.state.scale).level;if(this._graphicStore.updateLevel(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:i,newValue:s}=e;switch(i){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,s),this._attributeStore.sendUpdates()}}addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=e.map(e=>this._displayIds.get(e));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,p.bf)(t)||0===(0,p.Cb)(t))return[];const i=(0,Oe.Zu)(t,this.view.spatialReference);return(0,a.pC)(i)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(i[0]),...this.view.graphicsTileStore.boundsIntersections(i[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}_updateTile(e){var t=this;return(0,s.Z)(function*(){(0,l.k_)(t._controller.signal);const i=e.tile,s=t._getGraphicsData(t._templateStore,i,e.addedOrModified),r=yield t._processGraphics(i,s);return(0,l.k_)(t._controller.signal),t._patchTile(i.key,{type:"update",addOrUpdate:r,remove:e.removed,end:!0,clear:!1,sort:!1}),r})()}_patchTile(e,t){if(!this._tiles.has(e))return;const i=this._tiles.get(e);this.container.onTileData(i,t),this.container.requestRender()}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const i of e.added)t.added.add(i);for(const i of e.moved)t.updated.add(i);for(const i of e.removed)this._pendingUpdate.added.has(i)?t.added.delete(i):t.removed.add(i);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}_updateGraphics(){var e=this;return(0,s.Z)(function*(){e._processing=!0;const{added:t,removed:i,updated:s}=e._getGraphicsToUpdate(),r=e._tilesToUpdate;let n;try{if(!e._graphicStoreUpdate){const t=e.view.featuresTilingScheme.getClosestInfoForScale(e.view.state.scale).level;e._graphicStore.updateLevel(t)}const o=[],a=new Array(t.length+i.length);for(let t=0;t<s.length;t++){const i=s[t],l=e._getIntersectingTiles(i);for(const t of l)n=t.id,Je(n,t,r).removed.push(e._displayIds.get(i.uid));o.push(e._updateGraphic(i,null)),a[t]=i}const l=s.length;for(let i=0;i<t.length;i++){const s=t[i];a[l+i]=s,e._graphicsSet.add(s),o.push(e._addGraphic(s))}for(const t of i){e._abortProcessingGraphic(t.uid);const i=e._getIntersectingTiles(t);for(const s of i)n=s.id,Je(n,s,r).removed.push(e._displayIds.get(t.uid));e._graphicsSet.delete(t),e._graphicStore.remove(t)}let d;e._flipUpdatingGraphics(),yield Promise.all(o);for(let t=0;t<a.length;t++){d=a[t];const i=e._getIntersectingTiles(d);for(const e of i)n=e.id,Je(n,e,r).addedOrModified.push(d)}e._graphicStore.updateZ();const h=[];for(const[t,i]of r)h.push(e._updateTile(i));yield Promise.all(h)}catch(K){(0,l.D_)(K)}for(const o of i)try{const t=yield e._getSymbolForGraphic(o,{});t&&e._hashToExpandedSymbol.delete(t.hash())}catch(K){(0,l.D_)(K)}r.clear(),e.notifyChange("updating"),e._processing=!1,e._needsProcessing&&(e._needsProcessing=!1,e._updateGraphics())})()}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return(0,a.Wi)(e.geometry)?null:{geometryType:(0,y.Ji)(e.geometry),spatialReference:f.Z.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){var i=this;return(0,s.Z)(function*(){return(0,l.k_)(i._controller.signal),(0,a.pC)(e.symbol)?e.symbol:(0,a.pC)(i.renderer)?i.renderer.getSymbolAsync(e,{scale:i.view.scale,abortOptions:t}):i._getNullSymbol(e)})()}_getSymbolResources(e,t){var i=this;return(0,s.Z)(function*(){if((0,l.k_)(i._controller.signal),!i.container.stage)return null;const s=yield i._getSymbolForGraphic(e,t),r=s.hash();let n=i._hashToExpandedSymbol.get(r);if(!n){let a=i._hashTpExpandedSymbolPromise.get(r);if(a)n=yield a,(0,l.k_)(i._controller.signal);else{const d=i._getArcadeInfo(e),h=(0,ve.PY)(s);a=(0,L.B)(h,d,t),i._hashTpExpandedSymbolPromise.set(r,a);try{n=yield a,i._hashTpExpandedSymbolPromise.delete(r),i._hashToExpandedSymbol.set(r,n)}catch(o){i._hashTpExpandedSymbolPromise.delete(r),(0,l.k_)(o)}}}if("esriTS"===n.type){const e=[],[t]=(0,xe.E)(n.text);for(let i=0;i<t.length;i++)e.push(t.charCodeAt(i));const s={symbol:n,id:0,glyphIds:e},[{mosaicItem:r}]=yield i.container.getMaterialItems([s]);return{symbol:n,mosaicItem:r}}return{symbol:n,mosaicItem:null}})()}_projectAndNormalizeGeometry(e,t){var i=this;return(0,s.Z)(function*(){if((0,l.k_)(i._controller.signal),(0,a.Wi)(e.geometry)||"mesh"===e.geometry.type)return null;let s=e.geometry;if((0,y.oU)(s))s.rings=s.rings;else if((0,y.l9)(s))s.paths=s.paths;else if((0,y.YX)(s)){const r=yield i._getSymbolForGraphic(e,t);(0,l.k_)(i._controller.signal),s=(0,Oe.yA)(r.type)||(0,Oe.ab)(r.type)?s.center:u.Z.fromExtent(s)}yield(0,I._W)(s.spatialReference,i.view.spatialReference);const r=function(e){if(!e)return null;if("mesh"===e.type)return e.toJSON();let t=null;const i=e.spatialReference,s=(0,v.C5)(i);if(!s)return e.toJSON();const r=i.isWebMercator?102100:4326,n=_.UZ[r].maxX,o=_.UZ[r].minX,a=_.UZ[r].plus180Line,l=_.UZ[r].minus180Line;let d;const h=e.toJSON();if((0,y.wp)(h))d=D(h,n,o);else if((0,y.aW)(h))h.points=h.points.map(e=>D(e,n,o)),d=h;else if((0,y.YX)(h))d=b(h,s);else if((0,y.oU)(h)||(0,y.l9)(h)){const e=T;(0,g.$P)(e,h);const i={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},s=(0,_.XZ)(i.xmin,o)*(2*n),r=0===s?h:function(e,t){const i=(0,_.x3)(e);for(const s of i)for(const e of s)e[0]+=t;return e}(h,s);i.xmin+=s,i.xmax+=s,(0,x.jQ)(i,a)&&i.xmax!==n||(0,x.jQ)(i,l)&&i.xmin!==o?t=r:d=r}else d=e.toJSON();return null!==t?(new F).cut(t,n):d}(s),n=(0,I.iV)(r,s.spatialReference,i.view.spatialReference);return(0,m.pW)(n),n})()}_onTileUpdate(e){const t=(0,v.C5)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const i of e.removed)this._removeTile(i.key)}_addGraphic(e){var t=this;return(0,s.Z)(function*(){t._abortProcessingGraphic(e.uid),(0,l.k_)(t._controller.signal);const i=(0,l.yi)();t._graphicIdToAbortController.set(e.uid,i);const s={signal:i.signal};try{yield t._addOrUpdateGraphic(e,s),(0,l.k_)(t._controller.signal),t._graphicIdToAbortController.delete(e.uid)}catch(U){if(t._graphicIdToAbortController.delete(e.uid),!(0,l.D_)(U))throw U}})()}_updateGraphic(e,t){var i=this;return(0,s.Z)(function*(){(0,l.k_)(i._controller.signal);const s=i._projectAndNormalizeGeometry(e,t),r=i._getSymbolResources(e,t),[n,o]=yield Promise.all([s,r]);(0,l.k_)(i._controller.signal),i._graphicStore.addOrModify(e,o,n)})()}_addOrUpdateGraphic(e,t){var i=this;return(0,s.Z)(function*(){(0,l.k_)(i._controller.signal);const s=i._projectAndNormalizeGeometry(e,t),r=i._getSymbolResources(e,t);try{const[t,n]=yield Promise.all([s,r]);(0,l.k_)(i._controller.signal),i._addProjectedGraphic(e,n,t)}catch(n){if(!(0,l.D_)(n))throw n}})()}_addProjectedGraphic(e,t,i){this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,t,i)}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,p.Ue)(),e),i=new K(e,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i}_addNewTile(e,t){var i=this;return(0,s.Z)(function*(){const s=i._addTile(e.key),r=i._graphicStore.queryTileData(i._templateStore,e);if(0===r.length)return;if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of r)e.geometry&&((0,y.wp)(e.geometry)||(0,y.aW)(e.geometry))&&i._wrapPoints(e,s)}const n=e.key;i._tileUpdateSet.add(e.key),i.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:yield i._processGraphics(e,r),remove:[],end:!0,sort:!1};s.patch(t),i._tileUpdateSet.delete(n),i.notifyChange("updating")}catch(K){if(i._tileUpdateSet.delete(n),i.notifyChange("updating"),!(0,l.D_)(K))throw K}})()}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const i=this._displayIds.get(e),s=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,s|(t?S.Zd:0))}_getGraphicsData(e,t,i){const s=(0,v.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(e,t,i);if(s){const e=Math.round((s.valid[1]-s.valid[0])/t.resolution);for(const t of r)t.geometry&&((0,y.wp)(t.geometry)||(0,y.aW)(t.geometry))&&this._wrapPoints(t,e)}return r}_wrapPoints(e,t){const i=e.geometry;(0,y.aW)(i)?this._wrapMultipoint(i,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const i=e.points,s=[];let r=0,n=0;for(const[o,a]of i){if(s.push([o+r,a]),r=0,t===Oe.I_){const e=5*Oe.y1;o+n<e?(s.push([t,0]),r=-t):o+n>Oe.I_-e&&(s.push([-t,0]),r=t)}else o+n<-Oe.y1?(s.push([t,0]),r=-t):o+n>Oe.I_+Oe.y1&&(s.push([-t,0]),r=t);n+=o}e.points=s}_wrapPoint(e,t){const i=e.geometry;if(t===Oe.I_){const s=5*Oe.y1;i.x<s?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>Oe.I_-s&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}else i.x<-Oe.y1?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>Oe.I_+Oe.y1&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}_processGraphics(e,t,i){var r=this;return(0,s.Z)(function*(){if(!t||!t.length||!r._meshFactory)return null;const s=Fe.from(t),n=r._meshFactory,o=yield r._matcher;return yield n.analyzeGraphics(s,o,null,null,i),r._attributeStore.sendUpdates(),r._processAnalyzedGraphics(e,s)})()}_processAnalyzedGraphics(e,t){const i=this._meshFactory,s=t.getSize(),r=t.getCursor(),n=new me._(e.key.id,{features:s,records:s,metrics:0},!1,!1,!1),o=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const s=new se(t.displayId);s.insertAfter=t.insertAfter,o.push(s),i.writeGraphic(n,r,e.level)}const a=n.serialize(e.tileInfoView.tileInfo.isWrappable);return 1!==a.length?new pe:pe.fromVertexData(a[0].message,o)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return(0,y.l9)(t)?R.mW:(0,y.oU)(t)||(0,y.YX)(t)?R.kD:R.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};(0,r._)([(0,h.Cb)({constructOnly:!0})],Qe.prototype,"requestUpdateCallback",void 0),(0,r._)([(0,h.Cb)()],Qe.prototype,"container",void 0),(0,r._)([(0,h.Cb)({constructOnly:!0})],Qe.prototype,"graphics",void 0),(0,r._)([(0,h.Cb)()],Qe.prototype,"updating",null),(0,r._)([(0,h.Cb)()],Qe.prototype,"view",void 0),(0,r._)([(0,h.Cb)()],Qe.prototype,"updateRequested",void 0),Qe=(0,r._)([(0,c.j)("esri.views.2d.layers.support.GraphicsView2D")],Qe);var $e=Qe}}]);