(self.webpackChunkh4g_limo=self.webpackChunkh4g_limo||[]).push([[4293],{24293:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>O});var r=o(16304),i=o(8651),l=o(24065),s=o(93668),n=(o(75737),o(54704)),p=o(67372),a=o(98154),y=o(57319),u=o(46942),d=(o(12131),o(47648),o(18419),o(41460)),c=o(8680),S=o(3523),h=o(68141),v=o(83727),b=o(20174),C=o(69265),f=o(37001),m=o(17788),g=o(59107),_=o(4659),R=o(68177),Z=o(61488),k=o(64030);const w=["atom","xml"],F={base:g.Z,key:"type",typeMap:{"simple-line":_.Z},errorContext:"symbol"},j={base:g.Z,key:"type",typeMap:{"picture-marker":R.Z,"simple-marker":Z.Z},errorContext:"symbol"},x={base:g.Z,key:"type",typeMap:{"simple-fill":k.Z},errorContext:"symbol"};let M=class extends((0,h.h)((0,C.Q)((0,v.q)((0,b.I)((0,f.M)((0,p.R)(S.Z))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?(0,y.vt)(this.url,w)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach(e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")}),t.featureCollection.layers}load(e){const t=(0,n.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(a.r9).then(()=>this._fetchService(t))),Promise.resolve(this)}_fetchService(e){var t=this;return(0,r.Z)(function*(){const{data:o}=yield(0,s.default)(l.Z.geoRSSServiceUrl,{query:{url:t.url,refresh:!!t.loaded||void 0,outSR:t.outSpatialReference?JSON.stringify(t.outSpatialReference.toJSON()):void 0},signal:e});t.read(o,{origin:"service"})})()}};(0,i._)([(0,u.Cb)()],M.prototype,"description",void 0),(0,i._)([(0,u.Cb)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],M.prototype,"title",null),(0,i._)([(0,u.Cb)()],M.prototype,"featureCollections",void 0),(0,i._)([(0,d.r)("service","featureCollections",["featureCollection.layers"])],M.prototype,"readFeatureCollections",null),(0,i._)([(0,u.Cb)(m.id)],M.prototype,"id",void 0),(0,i._)([(0,u.Cb)(m.rn)],M.prototype,"legendEnabled",void 0),(0,i._)([(0,u.Cb)({types:F,json:{write:!0}})],M.prototype,"lineSymbol",void 0),(0,i._)([(0,u.Cb)({type:["show","hide"]})],M.prototype,"listMode",void 0),(0,i._)([(0,u.Cb)({types:j,json:{write:!0}})],M.prototype,"pointSymbol",void 0),(0,i._)([(0,u.Cb)({types:x,json:{write:!0}})],M.prototype,"polygonSymbol",void 0),(0,i._)([(0,u.Cb)({type:["GeoRSS"]})],M.prototype,"operationalLayerType",void 0),(0,i._)([(0,u.Cb)()],M.prototype,"outSpatialReference",void 0),(0,i._)([(0,u.Cb)(m.HQ)],M.prototype,"url",void 0),(0,i._)([(0,u.Cb)({readOnly:!0,json:{read:!1},value:"geo-rss"})],M.prototype,"type",void 0),M=(0,i._)([(0,c.j)("esri.layers.GeoRSSLayer")],M);var O=M}}]);