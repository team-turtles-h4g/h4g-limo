(self.webpackChunkh4g_limo=self.webpackChunkh4g_limo||[]).push([[6119],{26119:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>R});var i=t(16304),a=t(8651),o=t(93668),s=t(20614),n=t(2747),l=t(1518),p=t(96050),u=t(54704),d=t(67372),y=t(98154),c=t(46942),m=(t(12131),t(47648)),h=(t(18419),t(41460)),g=t(8680),b=t(66081),v=t(55019),f=t(95046),x=t(63908),S=t(3523),_=t(10165),w=t(34098),C=t(43839),O=t(68141),I=t(46642),M=t(83727),N=t(20174),j=t(69265),E=t(37001),P=t(98111),k=t(26429),J=t(17788),L=t(29009),Z=t(19267),q=t(59993);let F=class extends((0,O.h)((0,k.n)((0,E.M)((0,P.x)((0,w.O)((0,C.Y)((0,M.q)((0,N.I)((0,d.R)((0,j.Q)((0,_.V)((0,I.N)((0,l.p)(S.Z)))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=(0,u.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(y.r9).then(()=>this._fetchService(r))),Promise.resolve(this)}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,r,t,i){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).toArray();let o=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=(0,v.M9)(i.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;o=(0,q.QV)(a,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");o=(0,q.QV)(a,e.sublayers,(0,v.M9)(e.origin))}}const s=[],n={writeSublayerStructure:o,...i};let l=o;a.forEach(e=>{const r=e.write({},n);s.push(r),l=l||"user"===e.originOf("visible")}),s.some(e=>Object.keys(e).length>1)&&(r.layers=s),l&&(r.visibleLayers=a.filter(e=>e.visible).map(e=>e.id))}createExportImageParameters(e,r,t,i){const a=i&&i.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const o=new L.R({layer:this,floors:null==i?void 0:i.floors,scale:(0,x.yZ)({extent:e,width:r})*a}),s=o.toJSON();o.destroy();const n=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},l=e&&e.spatialReference,p=l.wkid||JSON.stringify(l.toJSON());s.dpi*=a;const u={};if(null!=i&&i.timeExtent){const{start:e,end:r}=i.timeExtent.toJSON();u.time=e&&r&&e===r?""+e:`${null==e?"null":e},${null==r?"null":r}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(u.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:p,imageSR:p,size:r+","+t,...s,...n,...u}}fetchImage(e,r,t,a){var s=this;return(0,i.Z)(function*(){var i;const l={responseType:"image",signal:null!=(i=null==a?void 0:a.signal)?i:null,query:{...s.parsedUrl.query,...s.createExportImageParameters(e,r,t,a),f:"image",...s.refreshParameters,...s.customParameters,token:s.apiKey}},p=s.parsedUrl.path+"/export";return null==l.query.dynamicLayers||s.capabilities.exportMap.supportsDynamicLayers?(0,o.default)(p,l).then(e=>e.data).catch(e=>{if((0,y.D_)(e))throw e;throw new n.Z("mapimagelayer:image-fetch-error",`Unable to load image: ${p}`,{error:e})}):Promise.reject(new n.Z("mapimagelayer:dynamiclayer-not-supported",`service ${s.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query}))})()}fetchRecomputedExtents(e={}){var r=this;return(0,i.Z)(function*(){const t={...e,query:{returnUpdates:!0,f:"json",...r.customParameters,token:r.apiKey}},{data:i}=yield(0,o.default)(r.url,t),{extent:a,fullExtent:n,timeExtent:l}=i,p=a||n;return{fullExtent:p&&f.Z.fromJSON(p),timeExtent:l&&s.Z.fromJSON({start:l[0],end:l[1]})}})()}loadAll(){return(0,p.GZ)(this,e=>{e(this.allSublayers)})}_fetchService(e){var r=this;return(0,i.Z)(function*(){if(r.sourceJSON)return void r.read(r.sourceJSON,{origin:"service",url:r.parsedUrl});const{data:t,ssl:i}=yield(0,o.default)(r.parsedUrl.path,{query:{f:"json",...r.parsedUrl.query,...r.customParameters,token:r.apiKey},signal:e});i&&(r.url=r.url.replace(/^http:/i,"https:")),r.sourceJSON=t,r.read(t,{origin:"service",url:r.parsedUrl})})()}};(0,a._)([(0,c.Cb)({type:Boolean})],F.prototype,"datesInUnknownTimezone",void 0),(0,a._)([(0,c.Cb)()],F.prototype,"dpi",void 0),(0,a._)([(0,c.Cb)()],F.prototype,"gdbVersion",void 0),(0,a._)([(0,c.Cb)()],F.prototype,"imageFormat",void 0),(0,a._)([(0,h.r)("imageFormat",["supportedImageFormatTypes"])],F.prototype,"readImageFormat",null),(0,a._)([(0,c.Cb)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],F.prototype,"imageMaxHeight",void 0),(0,a._)([(0,c.Cb)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],F.prototype,"imageMaxWidth",void 0),(0,a._)([(0,c.Cb)()],F.prototype,"imageTransparency",void 0),(0,a._)([(0,c.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],F.prototype,"isReference",void 0),(0,a._)([(0,c.Cb)({json:{read:!1,write:!1}})],F.prototype,"labelsVisible",void 0),(0,a._)([(0,c.Cb)({type:["ArcGISMapServiceLayer"]})],F.prototype,"operationalLayerType",void 0),(0,a._)([(0,c.Cb)({json:{read:!1,write:!1}})],F.prototype,"popupEnabled",void 0),(0,a._)([(0,c.Cb)()],F.prototype,"sourceJSON",void 0),(0,a._)([(0,c.Cb)({json:{write:{ignoreOrigin:!0}}})],F.prototype,"sublayers",void 0),(0,a._)([(0,b.c)("sublayers",{layers:{type:[Z.Z]},visibleLayers:{type:[m.z8]}})],F.prototype,"writeSublayers",null),(0,a._)([(0,c.Cb)({type:["show","hide","hide-children"]})],F.prototype,"listMode",void 0),(0,a._)([(0,c.Cb)({json:{read:!1},readOnly:!0,value:"map-image"})],F.prototype,"type",void 0),(0,a._)([(0,c.Cb)(J.HQ)],F.prototype,"url",void 0),F=(0,a._)([(0,g.j)("esri.layers.MapImageLayer")],F);var R=F}}]);